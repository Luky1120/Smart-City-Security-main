------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Manual for Smart City Project.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Road Traffic Light (Alley Accident Prevention Traffic Light System) - RTL
2. Security Drone 						- SD
3. Smart Road Damaged Detection 				- SRRD

This is a source code consisting of the above three projects.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
The SmartCityProject folder is a folder containing the main source code.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Inside SmartCityProject directory
- Arduino (-d) : A folder containing Arduino files.
	-- SecurityDroneLED (-d) : Arduino folder used for Security Drone.
		--- SecurityDroneLED.ino : Arduino file connected to the COM5 channel.
	-- Traffic Light (-d) : Arduino folder used for Road Traffic Light.
		--- TrafficLight.ino : Arduino file connected to COM4 channel.

- Send Message (-d) : A folder containing a code for receiving a Json key using the KakaoTalk message API.
	--json_key_save_SD.py : A file that creates and stores SD's KakaoTalk API Json Key.
	--json_open_SD.py : A file that opens SD's created KakaoTalk API Json Key file.
	--json_key_save_SRRD.py : A file that generates and stores SRRD's KakaoTalk API JsonKey.
	--json_open_SRRD.py : A file that opens the generated KakaoTalk API Json Key file of SRRD.
	-- This is the Json Key generated by SD_Code.json : json_key_save.py, which is a KakaoTalk API file used by Security Drone.
	--send_message_main.py : Message transmission source code connected from Smart Road Damaged Detect source code.
	-- This is a Json Key generated by SRRD_Code.json : json_key_save.py, and is a KakaoTalk API file used by Smart Road Damaged Detect.

- SRDD_HTML (-d) : A folder containing web page sources used by the road damage notification service.
	--screenshot (-d) : A folder that stores pictures of road surfaces generated by SRRD.
	--index.html : Source code for accessing Netflix and creating a web page of SRRD.

- 데이터 (-d) : A folder containing data used for neural network learning.
	--Converted_keras(-d): A folder that stores neural network learning models created using the teachable machine used by SRRD.
		--- Keras_model.h5 : SRRD neural network model.
		--- labels.txt : A text file showing the label value used in the SRRD neural network model.
	-- SecurityDrone_Data(-d) : A folder in which the xml file used by SD is stored.
		(This is the location of the carexample.xml source file currently in the parent directory. We don't use the xml file currently in the folder.)

- 테스트 영상 (-d) : It is a folder containing a performance image.

- carexample.xml : It is an xml file used for drone neural network learning.
- outpy.avi: This is the source result video.
- SmartCitySecurity.py : This is the main source code.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************How to Run!*******************

1. In Visual Studio Code, the Smart City Security folder is designated as a work folder and opened.
(*If the path of the work folder changes, the relative path values stored in the source code may change and the source code may not be executed!!*)

2. After designating a working folder. Open the Smart City Security.py source code. 

3-1. Do not run immediately, but json_key_save_SD.py and json_key_save_SRRD.py in the SendMessage folder.

3-2. If import request is not installed, VS Code terminal will install it. (pip install requests)
(*If there is a pip error, to check the environmental variables or reinstall Python (3.8.6).*)
(*If you add to path when installing Python, the path of the environment variable is automatically added, and the request is automatically connected.*)

3-3. Once installed, open the website by 'ctrl+mouse left click' the link that has been annotated at the top.

3-4. The current Kakao Talk message reset API and direct_uri values are my Kakao Talk message api key. You have to change the value after entering Kakao Talk Developer and receiving a new one.

3-5. Then, the ~~~code="authorize_code" part of the website address will appear, and copy the code located in the authorize_code location and insert it into the authorize_code variable in the code.
(*At "https://example.com/oauth?code=a9y204KDG2NM2y2rw5ECfYwSgmRNkLEdDT5jK1f58vzCSoXT3bIa2-j2vAmCQbDRnjCjIwo9dJkAAAF8MdulcQ", "code=" all of the back part*)

3-6. Then, run it and json_open_SD.py and json_open_SRRD.py.
(*If there is an error_code item in the Terminal Results window, you must open the website link again and copy and paste the authorize_code again.*)

	-If you have completed up to question 3, you will be able to use the message API.-

4-1. After completing the message API setting, open SmartCitySecurity.py.

4-2. You need to download the library you need for the terminal. Download the items below.
	-pip install opencv-python
	-pip install tensorflow
	-pip install pyserial
	-pip install cvlib
	-pip install cmake
	-pip install numpy
	Restart VS Code after installation.
	-pip install dlib
	Restart VS Code after installation.
	(*yolo) is automatically installed when the code is executed.*)

5-1. When the installation is complete, enter the Window Explorer and enter the SmartCityProject/Arduino folder.

5-2. After connecting two Arduinoes, TrafficLight.ino connects to "COM4", and SecurityDroneLED connects to "COM5".
(*To run without Arduino, annotate the Arduino-related code. The initial GitHub uploaded file has all the Arduino codes annotated.*)

6. Open SmartCitySsecurity.py and press ctrl+F5.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*************** Program Description****************
Attach the video and run it in the same format as running the video.

The Smart City Security Project is a project that combines three projects on the theme of smart city safety.

Road Traffic Light is a program that measures the risk of blind spots in alleys and informs vehicles and pedestrians of signals.

Security Drone is a program that sends messages based on the number of people and vehicles with reconnaissance drones.

Security Drone Speed Check is a program that determines the speed of a vehicle and sends a message when it exceeds the set speed.

Smart Road Damaged Detect is a program that detects road obstructions, especially portholes or cracks on the road, and sends locations and photos by message.

(PS. Currently, Smart Road Damaged Detect only takes pictures. I don't receive GPS values for that location and read the txt file that I randomly put in.
In addition, it was created in the form of uploading a web page to Netflix, so it cannot be uploaded in real time after taking it.
The web page sent to the message uploads only the picture in the screenshot folder of the last uploaded web page.)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------












