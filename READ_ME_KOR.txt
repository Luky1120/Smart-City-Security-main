------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Smart City Project사용 메뉴얼
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Road Traffic Light (골목길 사고방지 예방 신호등 시스템) - RTL
2. Security Drone (정찰 드론) 			- SD
3. Smart Road Damaged Detect (도로 파손 알림 서비스) - SRRD

위 3개의 프로젝트로 이루어진 하나의 소스코드입니다.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SmartCityProject 폴더가 메인 소스코드가 들어있는 폴더입니다.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SmartCityProject 디렉토리 내부
- Arduino (-d) : 아두이노 파일이 들어있는 폴더입니다.
	-- SecurityDroneLED (-d) : Security Drone에 사용되는 아두이노 폴더입니다.
		--- SecurityDroneLED.ino : COM5 채널로 연결되는 아두이노 파일입니다.
	-- TrafficLight (-d) : Road Traffic Light에 사용되는 아두이노 폴더입니다.
		--- TrafficLight.ino : COM4 채널로 연결되는 아두이노 파일입니다.

- SendMessage (-d) : 카카오톡 메시지 API를 이용하여 Json key를 받기 위한 코드가 들어있는 폴더입니다.
	-- json_key_save_SD.py : SD의 카카오톡 API Json Key를 생성 및 저장하는 파일입니다.
	-- json_open_SD.py : SD의 생성된 카카오톡 API Json Key 파일을 여는 파일입니다.
	-- json_key_save_SRRD.py : SRRD의 카카오톡 API Json Key를 생성 및 저장하는 파일입니다.
	-- json_open_SRRD.py : SRRD의 생성된 카카오톡 API Json Key 파일을 여는 파일입니다.
	-- SD_Code.json : json_key_save.py에서 생성된 Json Key로, Security Drone에서 사용하는 카카오톡 API 파일입니다.
	-- send_message_main.py : Smart Road Damaged Detect 소스코드에서 연결되는 메시지 전송 소스코드입니다.
	-- SRRD_Code.json : json_key_save.py에서 생성된 Json Key로, Smart Road Damaged Detect에서 사용하는 카카오톡 API 파일입니다.

- SRDD_HTML (-d) : 도로 파손 알림 서비스에서 사용하는 웹 페이지 소스가 들어있는 폴더입니다.
	-- screenshot (-d) : SRRD에서 생성된 도로 표면 사진을 저장하는 폴더입니다.
	-- index.html : Netlify에 접속하여 SRRD의 웹 페이지를 작성한 소스 코드입니다.

- 데이터 (-d) : 신경망 학습에 사용된 데이터가 들어있는 폴더입니다.
	-- Converted_keras(-d) : SRRD에서 사용하는 Teachable Machine을 이용하여 생성된 신경망 학습 모델을 저장한 폴더 입니다.
		--- keras_model.h5 : SRRD 신경망 모델입니다.
		--- labels.txt : SRRD 신경망 모델에 사용된 라벨 값을 표시한 텍스트 파일입니다.
	-- SecurityDrone_Data(-d) : SD에서 사용하는 xml 파일이 저장되어있는 폴더 입니다.
		(현재 상위 디렉토리에 있는 carexample.xml 원본 파일 위치입니다. 현재 폴더에 있는 xml파일은 사용하지 않습니다.)

- 테스트 영상 (-d) : 수행 영상이 들어있는 폴더입니다.

- carexample.xml : 드론 신경망 학습에 사용되는 xml 파일입니다.
- outpy.avi : 소스 결과 동영상 입니다.
- SmartCitySecurity.py : 메인 소스 코드입니다.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*****************실행 방법!!!*******************

1. Visual Studio Code에서 Smart City Secuity 폴더를 작업 폴더로 지정한 후 열어줍니다.
(*작업 폴더의 경로가 달라지면 소스코드에 저장되어 있는 상대 경로 값들이 변경되어 소스코드가 실행이 안될 수도 있습니다!!!!*)

2. 작업 폴더를 지정한 후 SmartCitySecurity.py 소스 코드를 열어 줍니다. (실행은 하지마세요.)

3-1. 바로 실행하지 말고, SendMessage 폴더에 있는 json_key_save_SD.py와 json_key_save_SRRD.py를 열어 줍니다. 

3-2. import request가 설치가 되어 있지 않다면 VS Code 터미널에서 설치를 해줍니다. (pip install requests)
(*pip 에러가 난다면 https://oz-il.tistory.com/m/21 사이트로 들어가서 환경변수 확인하고 혹은 파이썬(3.8.6)을 다시 설치 해줍니다.*)
(*파이썬 설치 시 Add to path를 하면 자동으로 환경변수 경로가 추가되며, request가 자동으로 연결됩니다*)

3-3. 설치가 되었으면 상단 주석 처리가 된 링크를 'ctrl+마우스 좌클릭'을 하여 웹사이트를 열어 줍니다.

3-4. 현재 카카오톡 메시지 reset API와 redirect_uri 값은 필자의 카카오톡 메시지 api 키입니다. 카카오톡 Developer에 들어가서 새로 받은 후 값을 변경해주셔야 합니다.

3-5. 그러면 웹 사이트 주소에 ~~~code="authorize_code" 부분이 나오게 되는데 authorize_code 위치에 있는 코드를 복사하여 코드 내의 authorize_code 변수에 집어 넣습니다.
(* https://example.com/oauth?code=a9y204KDG2NM2y2rw5ECfYwSgmRNkLEdDT5jK1f58vzCSoXT3bIa2-j2vAmCQbDRnjCjIwo9dJkAAAF8MdulcQ 에서 code= 뒷부분 전부*)

3-6. 그 다음 실행을 시키고 json_open_SD.py와 json_open_SRRD.py를 실행 시킵니다.
(*터미널 결과 창에 error_code 항목이 있으면 다시 웹 사이트 링크를 열어 authorize_code를 다시 복사 붙여넣기 해야합니다.*)

	-3번 문항까지 완료가 되었으면 메시지 API를 사용할 수 있는 상태가 됩니다.-

4-1. 메시지 API 설정 완료 후 SmartCitySecurity.py를 열어 줍니다.

4-2. 터미널에 필요한 라이브러리를 다운받아야 합니다. 밑에 항목들을 다운로드 합니다.
	-pip install opencv-python
	-pip install tensorflow
	-pip install pyserial
	-pip install cvlib
	-pip install cmake
	-pip install numpy
	설치 후 VS Code 재시작
	-pip install dlib
	설치 후 VS Code 재시작
	(*yolo는 코드 실행 시 자동으로 설치가 됩니다.*)

5-1. 설치가 완료되면 윈도우 탐색기로 들어와 SmartCityProject/Arduino 폴더에 들어갑니다.

5-2. 아두이노를 2대 연결한 뒤, TrafficLight.ino는 "COM4"에 연결하고, SecurityDroneLED는 "COM5"에 연결합니다.
(*아두이노 없이 실행하시려면 아두이노 관련 코드를 주석처리 합니다. 초기 깃허브 업로드된 파일은 아두이노 코드를 전부 주석처리 해두었습니다*)

6. SmartCitySsecurity.py를 열고 ctrl+F5를 눌러 실행합니다.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
***************프로그램 설명*******************
동영상을 첨부하며 동영상 실행과 같은 형식으로 실행이 됩니다.

Smart City Security Project는 스마트 시티의 안전을 주제로 한 3개의 프로젝트를 하나로 합친 프로젝트 입니다.

Road Traffic Light는 골목길 사각지대 위험도를 측정하여 차량과 보행자에게 신호를 알려주는 프로그램입니다.

Security Drone은 정찰 드론으로 인원 수와 차량 대수를 판단하여 메시지를 보내는 프로그램입니다.

Security Drone Speed Check는 차량의 속도를 판별하여 설정된 속도를 넘게 되면 메시지를 보내는 프로그램입니다.

Smart Road Damaged Detect는 도로의 방해물 특히 도로의 포트홀이나 균열을 감지하여 위치와 사진을 메시지로 보내는 프로그램입니다.

(PS. 현재 Smart Road Damaged Detect는 사진만 찍는 역할을 합니다. 해당 위치에 대한 GPS 값은 받지 못하고 임의로 넣어준 txt 파일을 읽어옵니다.
또한 Netlify에 웹 페이지를 업로드 하는 형태로 제작을 하였기 때문에 찍은 뒤 실시간으로 업로드 하지 못합니다.
메시지에 보내어지는 웹 페이지는 마지막으로 업로드한 웹 페이지의 screenshot 폴더에 있는 사진만 업로드를 합니다.)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------














